plugins {
	// Add in spring-boot oriented tasks (bootRun, etc)
	id 'org.springframework.boot'
	// Plugin to auto-detect Spring BOM for dependency versioning
	id 'io.spring.dependency-management'
	// Java support
	id 'java'
	// Coverage goals
	id 'jacoco'
	// Code formatter (spotlessCheck, spotlessApply)
	id 'com.diffplug.spotless'
	// Dependency scan for CVE vulnerabilities
	id 'org.owasp.dependencycheck'
	// Code check
	id 'checkstyle'
}

apply from: 'gradle/checkstyle.gradle'
apply from: 'gradle/dependencyCheck/dependencyCheck.gradle'
apply from: 'gradle/jacoco.gradle'
apply from: 'gradle/spotless.gradle'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

allprojects {
    tasks.withType(JavaCompile).configureEach {
		options.encoding = 'UTF-8'
	}

	tasks.withType(Test).tap {
		configureEach {
			systemProperty "file.encoding", "UTF-8"
		}
	}
}

repositories {
	mavenCentral()
}

jar {
    group    = "com.gsdd"
    version  = "2.1.3"
    manifest { attributes "Main-Class": "com.gsdd.knowledgedb.KnowledgeDbApplication" }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation "org.mapstruct:mapstruct:$mapstructVersion"

	// processors
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:$mapstructLombokVersion"

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
	// test processors
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor "org.mapstruct:mapstruct:$mapstructVersion"
	testAnnotationProcessor "org.projectlombok:lombok-mapstruct-binding:$mapstructLombokVersion"
}

test {
	useJUnitPlatform()
	ignoreFailures = false
	reports.junitXml.outputLocation = layout.buildDirectory.file('reports/junit/test-results').get().asFile
	testLogging.showStandardStreams = true
   	testLogging.exceptionFormat = 'full'
}

tasks.register('publish', GradleBuild) {
	tasks = ['clean', 'build', 'test', 'jacocoTestCoverageVerification', 'jacocoTestReport', 'jar']
}
